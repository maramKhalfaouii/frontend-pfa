{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport App from \"next/app\";\nimport Router from \"next/router\";\nimport NProgress from \"nprogress\";\nimport { Header } from \"components/layout\";\nimport { ErrorBoundary } from \"components/error-boundary\";\nimport { ProvideAuth, AuthToken, TOKEN_STORAGE_NAME } from \"utils/auth\";\nimport { Container } from \"reactstrap\";\nimport nookies from \"nookies\";\nexport default class CustomApp extends App {\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    const token = nookies.get(ctx)[TOKEN_STORAGE_NAME];\n    let initialProps = {};\n\n    if (token) {\n      const auth = new AuthToken(token);\n      initialProps = {\n        auth\n      };\n    }\n\n    if (Component.getInitialProps) {\n      return Component.getInitialProps(ctx, initialProps);\n    }\n\n    return initialProps;\n  }\n\n  get auth() {\n    if (this.props.auth) {\n      // the server pass to the client serializes the token\n      // so we have to reinitialize the authToken class\n      //\n      // @see https://github.com/zeit/next.js/issues/3536\n      return new AuthToken(this.props.auth.token);\n    }\n\n    return null;\n  }\n\n  componentDidMount() {\n    Router.events.on(\"routeChangeComplete\", () => {\n      NProgress.start();\n    });\n    Router.events.on(\"routeChangeComplete\", () => NProgress.done());\n    Router.events.on(\"routeChangeError\", () => NProgress.done());\n  }\n\n  componentDidCatch(error, errorInfo) {\n    super.componentDidCatch(error, errorInfo);\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    return __jsx(ProvideAuth, {\n      auth: this.auth\n    }, __jsx(Header, null), __jsx(ErrorBoundary, null, __jsx(Container, {\n      className: \"mt-3\"\n    }, __jsx(Component, pageProps))));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}