{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { TextInput } from \"components/text-input\";\nimport { AuthApi } from \"services\";\nimport { login } from \"utils/auth\";\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n`;\nconst LoginForm = styled.form`\n  margin: 20px auto;\n  width: 40%;\n`;\n\nconst Login = () => {\n  const {\n    0: email,\n    1: setEmail\n  } = useState(\"\");\n  const {\n    0: password,\n    1: setPassword\n  } = useState(\"\");\n  const {\n    0: isError,\n    1: setIsError\n  } = useState(false);\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    setIsError(false);\n\n    try {\n      const api = new AuthApi();\n      api.setup();\n      const response = await api.login(email, password);\n\n      if (response.kind === \"ok\") {\n        const {\n          token\n        } = response;\n        login(token);\n      } else {\n        setIsError(true);\n      }\n    } catch (err) {\n      setIsError(true);\n    }\n  };\n\n  return __jsx(Container, {\n    className: \"col-12\"\n  }, __jsx(LoginForm, {\n    onSubmit: onSubmit\n  }, __jsx(TextInput, {\n    label: \"Email\",\n    type: \"email\",\n    id: \"email\",\n    name: \"email\",\n    value: email,\n    required: true,\n    onChange: e => {\n      setEmail(e.target.value);\n    }\n  }), __jsx(TextInput, {\n    label: \"Password\",\n    id: \"password\",\n    name: \"password\",\n    required: true,\n    type: \"password\",\n    value: password,\n    onChange: e => {\n      setPassword(e.target.value);\n    }\n  }), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary float-right\"\n  }, \"Login\"))), isError && __jsx(\"div\", {\n    className: \"mt-4 alert alert-danger\",\n    role: \"alert\"\n  }, \"There's an error while login, please try again!\"));\n};\n\nexport default Login;","map":null,"metadata":{},"sourceType":"module"}