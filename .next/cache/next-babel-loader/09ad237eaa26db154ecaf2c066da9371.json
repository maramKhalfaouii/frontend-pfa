{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Api } from \"./api\";\nimport { getGeneralApiProblem } from \"./api/api-problem\";\nexport var AuthApi = /*#__PURE__*/function (_Api) {\n  _inherits(AuthApi, _Api);\n\n  var _super = _createSuper(AuthApi);\n\n  function AuthApi() {\n    _classCallCheck(this, AuthApi);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AuthApi, [{\n    key: \"login\",\n    value: function () {\n      var _login = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(email, password) {\n        var response, problem, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.apisauce.post(\"/api/v1/auth/login\", {\n                  email: email,\n                  password: password\n                });\n\n              case 2:\n                response = _context.sent;\n\n                if (response.ok) {\n                  _context.next = 7;\n                  break;\n                }\n\n                problem = getGeneralApiProblem(response);\n\n                if (!problem) {\n                  _context.next = 7;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", problem);\n\n              case 7:\n                _context.prev = 7;\n                data = response.data;\n                return _context.abrupt(\"return\", {\n                  kind: \"ok\",\n                  token: data.auth_token,\n                  user: data.user\n                });\n\n              case 12:\n                _context.prev = 12;\n                _context.t0 = _context[\"catch\"](7);\n                return _context.abrupt(\"return\", {\n                  kind: \"bad-data\"\n                });\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[7, 12]]);\n      }));\n\n      function login(_x, _x2) {\n        return _login.apply(this, arguments);\n      }\n\n      return login;\n    }()\n  }, {\n    key: \"fetchStatus\",\n    value: function () {\n      var _fetchStatus = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(token) {\n        var response, problem, data;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.apisauce.setHeader(\"Authorization\", \"Bearer \".concat(token));\n                _context2.next = 3;\n                return this.apisauce.get(\"/api/v1/auth/status\");\n\n              case 3:\n                response = _context2.sent;\n\n                if (response.ok) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                problem = getGeneralApiProblem(response);\n\n                if (!problem) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", problem);\n\n              case 8:\n                _context2.prev = 8;\n                data = response.data;\n                return _context2.abrupt(\"return\", {\n                  kind: \"ok\",\n                  user: data.user\n                });\n\n              case 13:\n                _context2.prev = 13;\n                _context2.t0 = _context2[\"catch\"](8);\n                return _context2.abrupt(\"return\", {\n                  kind: \"bad-data\"\n                });\n\n              case 16:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[8, 13]]);\n      }));\n\n      function fetchStatus(_x3) {\n        return _fetchStatus.apply(this, arguments);\n      }\n\n      return fetchStatus;\n    }()\n  }, {\n    key: \"checkToken\",\n    value: function () {\n      var _checkToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(token) {\n        var response, problem, data;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.apisauce.setHeader(\"Authorization\", \"Bearer \".concat(token));\n                _context3.next = 3;\n                return this.apisauce.get(\"/api/v1/auth/ping\");\n\n              case 3:\n                response = _context3.sent;\n\n                if (response.ok) {\n                  _context3.next = 8;\n                  break;\n                }\n\n                problem = getGeneralApiProblem(response);\n\n                if (!problem) {\n                  _context3.next = 8;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", problem);\n\n              case 8:\n                _context3.prev = 8;\n                data = response.data;\n                return _context3.abrupt(\"return\", {\n                  kind: \"ok\",\n                  message: data.message\n                });\n\n              case 13:\n                _context3.prev = 13;\n                _context3.t0 = _context3[\"catch\"](8);\n                return _context3.abrupt(\"return\", {\n                  kind: \"bad-data\"\n                });\n\n              case 16:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[8, 13]]);\n      }));\n\n      function checkToken(_x4) {\n        return _checkToken.apply(this, arguments);\n      }\n\n      return checkToken;\n    }()\n  }]);\n\n  return AuthApi;\n}(Api);","map":null,"metadata":{},"sourceType":"module"}