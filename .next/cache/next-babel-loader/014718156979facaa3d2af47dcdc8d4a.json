{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Api } from \"./api\";\nimport { getGeneralApiProblem } from \"./api/api-problem\";\nexport var UserApi = /*#__PURE__*/function (_Api) {\n  _inherits(UserApi, _Api);\n\n  var _super = _createSuper(UserApi);\n\n  function UserApi() {\n    _classCallCheck(this, UserApi);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(UserApi, [{\n    key: \"convertUser\",\n    value: function convertUser(raw) {\n      return {\n        id: raw.id,\n        firstName: raw.firstName,\n        lastName: raw.lastName,\n        email: raw.email,\n        admin: raw.admin,\n        active: raw.active\n      };\n    }\n  }, {\n    key: \"getUserById\",\n    value: function () {\n      var _getUserById = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(token, id) {\n        var response, problem, user;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.apisauce.setHeader(\"Authorization\", \"Bearer \".concat(token));\n                _context.next = 3;\n                return this.apisauce.get(\"/api/v1/users/\".concat(id));\n\n              case 3:\n                response = _context.sent;\n\n                if (response.ok) {\n                  _context.next = 8;\n                  break;\n                }\n\n                problem = getGeneralApiProblem(response);\n\n                if (!problem) {\n                  _context.next = 8;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", problem);\n\n              case 8:\n                _context.prev = 8;\n                user = response.data.data;\n                return _context.abrupt(\"return\", {\n                  kind: \"ok\",\n                  user: user\n                });\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](8);\n                return _context.abrupt(\"return\", {\n                  kind: \"bad-data\"\n                });\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[8, 13]]);\n      }));\n\n      function getUserById(_x, _x2) {\n        return _getUserById.apply(this, arguments);\n      }\n\n      return getUserById;\n    }()\n  }, {\n    key: \"getUsers\",\n    value: function () {\n      var _getUsers = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(token) {\n        var response, problem, rawUsers, resultUsers;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.apisauce.setHeader(\"Authorization\", \"Bearer \".concat(token));\n                _context2.next = 3;\n                return this.apisauce.get(\"/api/v1/users\");\n\n              case 3:\n                response = _context2.sent;\n\n                if (response.ok) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                problem = getGeneralApiProblem(response);\n\n                if (!problem) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", problem);\n\n              case 8:\n                _context2.prev = 8;\n                rawUsers = response.data;\n                resultUsers = rawUsers.map(this.convertUser);\n                return _context2.abrupt(\"return\", {\n                  kind: \"ok\",\n                  users: resultUsers\n                });\n\n              case 14:\n                _context2.prev = 14;\n                _context2.t0 = _context2[\"catch\"](8);\n                return _context2.abrupt(\"return\", {\n                  kind: \"bad-data\"\n                });\n\n              case 17:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[8, 14]]);\n      }));\n\n      function getUsers(_x3) {\n        return _getUsers.apply(this, arguments);\n      }\n\n      return getUsers;\n    }()\n  }]);\n\n  return UserApi;\n}(Api);","map":null,"metadata":{},"sourceType":"module"}